#!/bin/bash
#PBS -k o
#PBS -l nodes=1:ppn=32
#PBS -l walltime=2:30:00
#PBS -N Lab2_1M1P_U2
#PBS -M fuyuan@iupui.edu
#PBS -q cpu
#PBS -V
#PBS -m abe
#PBS -j oe

total_process=1
my_run_exp1="aprun -n $total_process -N 1 -d 32 /N/u/fuyuan/BigRed2/hpchw/hw1/dgemm"
my_run_exp2="aprun -n $total_process -N 1 -d 32 /N/u/fuyuan/BigRed2/hpchw/lab2_block_unroll2/block_dgemm"

maxp=1
inner_loop=5
# matrix_size=(10 20 40 80 100 150 200 250 260 270 280 290 291 292 293 295 300 350 400 450 500 550 600 700 800 820 840 860 880 900 920 940 960 980 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
# matrix_size=(1700 1800 1900 2000)

cat /proc/cpuinfo
echo "see how many cache level are there"
ls /sys/devices/system/cpu/cpu0/cache/index
echo "see each level size"
echo "level 1 Data"
cat /sys/devices/system/cpu/cpu0/cache/index0/type
cat /sys/devices/system/cpu/cpu0/cache/index0/size
echo "level 1 Instruction"
cat /sys/devices/system/cpu/cpu0/cache/index1/type
cat /sys/devices/system/cpu/cpu0/cache/index1/size
echo "level 2 Unified"
cat /sys/devices/system/cpu/cpu0/cache/index2/type
cat /sys/devices/system/cpu/cpu0/cache/index2/size
echo "level 3 Unified"
cat /sys/devices/system/cpu/cpu0/cache/index3/type
cat /sys/devices/system/cpu/cpu0/cache/index3/size

inner_loop=20
matrix_size=(64)
block_size=(2 4 8 16 32 64)

for((i=0;i<${#matrix_size[@]};i++));do
	echo "*************************************************************************************"
	echo "---Matrix_size=${matrix_size[i]}------"
	echo "*************************************************************************************"
	echo "=============Exp1:Naive_Algorithm:Matrix_size=${matrix_size[i]}==============="
	$my_run_exp1 ${matrix_size[i]} $inner_loop
	echo "-----------End Exp1-------------"
	for ((j=0;j<${#block_size[@]};j++)); do
		echo "=============Exp2:Block_Algorithm:Matrix_size=${matrix_size[i]}, block_size=${block_size[j]}==============="
		$my_run_exp2 ${matrix_size[i]} $inner_loop ${block_size[j]}
		echo "-----------End Exp2-------------"
	done
done

inner_loop=20
matrix_size=(128)
block_size=(2 4 8 16 32 64 96 128)

for((i=0;i<${#matrix_size[@]};i++));do
	echo "*************************************************************************************"
	echo "---Matrix_size=${matrix_size[i]}------"
	echo "*************************************************************************************"
	echo "=============Exp1:Naive_Algorithm:Matrix_size=${matrix_size[i]}==============="
	$my_run_exp1 ${matrix_size[i]} $inner_loop
	echo "-----------End Exp1-------------"
	for ((j=0;j<${#block_size[@]};j++)); do
		echo "=============Exp2:Block_Algorithm:Matrix_size=${matrix_size[i]}, block_size=${block_size[j]}==============="
		$my_run_exp2 ${matrix_size[i]} $inner_loop ${block_size[j]}
		echo "-----------End Exp2-------------"
	done
done


inner_loop=20
matrix_size=(256)
block_size=(2 4 8 16 32 64 96 128 192 256)

for((i=0;i<${#matrix_size[@]};i++));do
	echo "*************************************************************************************"
	echo "---Matrix_size=${matrix_size[i]}------"
	echo "*************************************************************************************"
	echo "=============Exp1:Naive_Algorithm:Matrix_size=${matrix_size[i]}==============="
	$my_run_exp1 ${matrix_size[i]} $inner_loop
	echo "-----------End Exp1-------------"
	for ((j=0;j<${#block_size[@]};j++)); do
		echo "=============Exp2:Block_Algorithm:Matrix_size=${matrix_size[i]}, block_size=${block_size[j]}==============="
		$my_run_exp2 ${matrix_size[i]} $inner_loop ${block_size[j]}
		echo "-----------End Exp2-------------"
	done
done


inner_loop=20
matrix_size=(512)
block_size=(2 4 8 16 32 64 96 128 192 256 384 512)

for((i=0;i<${#matrix_size[@]};i++));do
	echo "*************************************************************************************"
	echo "---Matrix_size=${matrix_size[i]}------"
	echo "*************************************************************************************"
	echo "=============Exp1:Naive_Algorithm:Matrix_size=${matrix_size[i]}==============="
	$my_run_exp1 ${matrix_size[i]} $inner_loop
	echo "-----------End Exp1-------------"
	for ((j=0;j<${#block_size[@]};j++)); do
		echo "=============Exp2:Block_Algorithm:Matrix_size=${matrix_size[i]}, block_size=${block_size[j]}==============="
		$my_run_exp2 ${matrix_size[i]} $inner_loop ${block_size[j]}
		echo "-----------End Exp2-------------"
	done
done


inner_loop=8
matrix_size=(1024)
block_size=(2 4 8 16 32 64 96 128 192 256 384 512 768 1024)

for((i=0;i<${#matrix_size[@]};i++));do
	echo "*************************************************************************************"
	echo "---Matrix_size=${matrix_size[i]}------"
	echo "*************************************************************************************"
	echo "=============Exp1:Naive_Algorithm:Matrix_size=${matrix_size[i]}==============="
	$my_run_exp1 ${matrix_size[i]} $inner_loop
	echo "-----------End Exp1-------------"
	for ((j=0;j<${#block_size[@]};j++)); do
		echo "=============Exp2:Block_Algorithm:Matrix_size=${matrix_size[i]}, block_size=${block_size[j]}==============="
		$my_run_exp2 ${matrix_size[i]} $inner_loop ${block_size[j]}
		echo "-----------End Exp2-------------"
	done
done


inner_loop=5
matrix_size=(2048)
block_size=(2 4 8 16 32 64 96 128 192 256 384 512 768 1024 1536 2048)

for((i=0;i<${#matrix_size[@]};i++));do
	echo "*************************************************************************************"
	echo "---Matrix_size=${matrix_size[i]}------"
	echo "*************************************************************************************"
	echo "=============Exp1:Naive_Algorithm:Matrix_size=${matrix_size[i]}==============="
	$my_run_exp1 ${matrix_size[i]} $inner_loop
	echo "-----------End Exp1-------------"
	for ((j=0;j<${#block_size[@]};j++)); do
		echo "=============Exp2:Block_Algorithm:Matrix_size=${matrix_size[i]}, block_size=${block_size[j]}==============="
		$my_run_exp2 ${matrix_size[i]} $inner_loop ${block_size[j]}
		echo "-----------End Exp2-------------"
	done
done
